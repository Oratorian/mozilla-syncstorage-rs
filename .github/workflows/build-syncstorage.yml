name: Docker Build and Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REPO: oratorian/syncstorage-rs
  GHCR_REPO: ghcr.io/${{ github.repository_owner }}/mozilla-syncstorage-rs

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Login to GitHub Container Registry
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata for Docker Hub
      id: meta-docker
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.DOCKER_REPO }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Extract metadata for GHCR
      id: meta-ghcr
      uses: docker/metadata-action@v4
      with:
        images: ${{ env.GHCR_REPO }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest,enable={{is_default_branch}}

    - name: Build and push to both registries
      uses: docker/build-push-action@v4
      with:
        context: .
        platforms: linux/amd64,linux/arm64
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ steps.meta-docker.outputs.tags }}
          ${{ steps.meta-ghcr.outputs.tags }}
        labels: |
          ${{ steps.meta-docker.outputs.labels }}
          ${{ steps.meta-ghcr.outputs.labels }}
          org.opencontainers.image.source=https://github.com/${{ github.repository }}
          org.opencontainers.image.description=Mozilla Sync Storage Server with Python 3.13 and tokenserver support
          org.opencontainers.image.licenses=MPL-2.0
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # Create GitHub Release when pushing a version tag
  create-release:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Extract version from tag
      id: version
      run: |
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT

    - name: Generate Release Notes
      id: release_notes
      run: |
        cat << EOF > release_notes.md
        ## Syncstorage-RS Docker Image ${{ steps.version.outputs.VERSION }}
        
        ### üê≥ Docker Images
        
        Available from two registries:
        
        #### Docker Hub
        \`\`\`bash
        docker pull ${{ env.DOCKER_REPO }}:${{ steps.version.outputs.VERSION }}
        docker pull ${{ env.DOCKER_REPO }}:latest
        \`\`\`
        
        #### GitHub Container Registry
        \`\`\`bash
        docker pull ghcr.io/${{ github.repository_owner }}/syncstorage-rs:${{ steps.version.outputs.VERSION }}
        docker pull ghcr.io/${{ github.repository_owner }}/syncstorage-rs:latest
        \`\`\`
        
        ### üéØ What's Changed
        See commit history and auto-generated notes below for detailed changes.
        
        ### üöÄ Quick Start
        
        Using Docker Hub:
        \`\`\`bash
        docker run -d \\
          --name syncstorage \\
          -p 8000:8000 \\
          -e SYNC_HOST=0.0.0.0 \\
          -e SYNC_MASTER_SECRET=\$(openssl rand -hex 32) \\
          -e SYNC_SYNCSTORAGE__DATABASE_URL=mysql://user:pass@host/db \\
          ${{ env.DOCKER_REPO }}:${{ steps.version.outputs.VERSION }}
        \`\`\`
        
        Using GitHub Container Registry:
        \`\`\`bash
        docker run -d \\
          --name syncstorage \\
          -p 8000:8000 \\
          -e SYNC_HOST=0.0.0.0 \\
          -e SYNC_MASTER_SECRET=\$(openssl rand -hex 32) \\
          -e SYNC_SYNCSTORAGE__DATABASE_URL=mysql://user:pass@host/db \\
          ghcr.io/${{ github.repository_owner }}/syncstorage-rs:${{ steps.version.outputs.VERSION }}
        \`\`\`
        
        ### üì¶ Package Links
        - [Docker Hub](https://hub.docker.com/r/${{ env.DOCKER_REPO }})
        - [GitHub Packages](https://github.com/${{ github.repository }}/pkgs/container/syncstorage-rs)
        
        ### üìñ Documentation
        - [Complete Setup Guide](https://github.com/${{ github.repository }}/blob/main/README.md)
        - [Upstream Project](https://github.com/mozilla-services/syncstorage-rs)
        EOF

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ steps.version.outputs.VERSION }}
        body_file: release_notes.md
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
